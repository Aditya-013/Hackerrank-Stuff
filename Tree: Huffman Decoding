def Huffman(root, s, i):
    
    if root == None:
        return
    
    if i > len(s):
        return
    
    if root.right == None and root.left == None:
        print(root.data, end = "")
        if i == len(s):
            exit()
        return i

    elif s[i] == '1' and i <= len(s):
        i = Huffman(root.right, s, i + 1)
        return i
    
    elif s[i] == '0' and i <= len(s) - 1:
        i = Huffman(root.left, s, i + 1)
        return i   
    
# Enter your code here. Read input from STDIN. Print output to STDOUT
def decodeHuff(root, s):
    i = 0
    j = 0
    while i <= len(s):
        i = Huffman(root, s, i)
        
        ## Not really sure why but the value of i kept changing to None out of no where. Need to figure out why
        if i != None:
            j = i
        if i == None:
            i = j
