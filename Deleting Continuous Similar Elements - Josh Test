#include <iostream>
using namespace std;
class Node
{
	public:
	int data;
	Node *next;
};

void push(Node** head_ref, int new_data)
{
	Node* new_node = new Node();
	new_node->data = new_data;
	new_node->next = (*head_ref);
	(*head_ref) = new_node;
}

void deleteNode(Node **head_ref){
    if (*head_ref == NULL)
        return;
        
    Node* temp = *head_ref;
    Node* prev = *head_ref;
    
    int temp_val;
    cout<<"\n";
    temp_val = temp->data;
    while(temp != NULL){
        
    if(temp->next != NULL && temp->data == temp->next->data){
        temp_val = temp->data;
        if(temp == *head_ref){
            while(temp->data == temp_val && temp != NULL){
                temp = temp->next;
            }
            *head_ref = temp;
        }
        else{
            while(temp->data == temp_val && temp != NULL){
                if(temp->next == NULL){
                    prev->next = NULL;
                    break;
                }
                temp = temp->next;
            }
            
            if(prev->next != NULL){
                prev->next = temp;
            }
        }
    }
        
        prev = temp;
        temp = temp->next;
    }
}


void printList( Node *node)
{
	while (node != NULL)
	{
		cout << node->data << " ";
		node = node->next;
	}
}

int main()
{
	
	Node* head = NULL;
	push(&head, 8);
	push(&head, 8);
	push(&head, 8);
	push(&head, 7);
	push(&head, 1);
	push(&head, 1);
	push(&head, 1);
	push(&head, 3);
	push(&head, 2);
	push(&head, 8);
	push(&head, 8);
	push(&head, 8);
	push(&head, 8);

	cout << "Created Linked List: ";
	printList(head);
	deleteNode(&head);
	cout << "\nLinked List after Deletion: ";
	printList(head);
	return 0;
}

