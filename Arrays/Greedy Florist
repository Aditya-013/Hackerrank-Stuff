def smallest(smaller):
    val = 0
    for i in range(0, len(smaller)):
        if smaller[i] < smaller[val]:
            val = i            
    return val


# Complete the getMinimumCost function below.
def getMinimumCost(k, c):
    n = len(c)
    c.sort(reverse = True)
    print(c)
    price = 0
    prev = 0
    j = k-1
    
    for i in range(0, n):
        price = price + c[i]*(prev + 1)
        if i == j:
            prev = prev + 1 
            j = j + k
    
    return price 
    
    # for i in range(0, n):
    #     price = price + c[i]* (prev +1)
    #     if i == j: 
    #         prev = prev + 1
    #         j = j + k
    
    # return price 
    
    # if k > len(c):
    #     for i in range(0, len(c)):
    #         sum1 = sum1 + c[i]
    #     return sum1
    
    # for i in range(1, k+1):
    #     friends.append(c[n-i])
    #     count.append(1)
        
    # print(friends, count)
    
    # # print(count)
    # for i in range(n-k-1, -1, -1):
    #     smaller = []
        
    #     for j in range(0, len(friends)):
    #         smaller.append(friends[j] + (count[j] + 1) * c[i])
            
    #     val = smallest(smaller)        
    #     count[val] = count[val] + 1
    #     friends[val] = friends[val] + ((count[val]) * c[i])
        
    #     print("After Every Iteration::")
    #     print(smaller, friends, count, c[i])
    
    # for i in range(0, len(friends)):
    #     sum1 = sum1 + friends[i]
    
    # return sum1
    
